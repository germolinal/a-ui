webpackJsonp([10],{"3XUN":function(a,t,n){"use strict";var i=function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("div",{directives:[{name:"container",rawName:"v-container"}]},[n("h1",[a._v("Buttons")]),n("p",[a._v("\n\n  There are two kinds of buttons in Clean-UI: \n  "),n("a-link",{attrs:{href:"#flat-buttons"}},[a._v("Flat Buttons")]),a._v("  and \n  "),n("a-link",{attrs:{href:"#raised-buttons"}},[a._v("Raised Buttons")]),a._v(".    \n  \n  They both allow the following variants:        \n  \n  ")],1),a._m(0),n("p",[a._v("\n      The variant changes the color of the button, but not the behavior or the size. The colors come from the \n      colors in the theme.\n  ")]),n("h2",{attrs:{id:"flat-buttons"}},[a._v("Flat buttons")]),n("h3",[a._v("Example 1")]),n("p",[a._v("Simple buttons only require text. For example,")]),n("textarea",{directives:[{name:"verbatim",rawName:"v-verbatim"}]},[a._v("      <a-button :variant=\"'primary'\">Primary</a-button>\n      <a-button :variant=\"'accent'\">Accent</a-button>\n      <a-button :variant=\"'warn'\">Warn</a-button>\n      <a-button :variant=\"'basic'\">Basic</a-button>\n      <a-button :variant=\"'disabled'\">Disabled</a-button> \n  ")]),n("p",[a._v("Leads to ")]),n("div",{staticClass:"example-content"},[n("a-button",{attrs:{variant:"primary"}},[a._v("Primary")]),n("a-button",{attrs:{variant:"accent"}},[a._v("Accent")]),n("a-button",{attrs:{variant:"warn"}},[a._v("Warn")]),n("a-button",{attrs:{variant:"basic"}},[a._v("Basic")]),n("a-button",{attrs:{variant:"disabled"}},[a._v("Disabled")])],1),n("h3",[a._v("Example 2")]),n("p",[a._v("But buttons may also have icons. In such case, it is recommended to use\n      a Material Design icon and a span with the text. For example,\n  ")]),n("textarea",{directives:[{name:"verbatim",rawName:"v-verbatim"}],staticStyle:{height:"200px"}},[a._v('      <a-button :variant="\'primary\'">\n          <i class="material-icons">close</i>\n          <span> CLOSE</span>\n      </a-button>\n      <a-button :variant="\'accent\'">\n          <i class="material-icons">menu</i>\n          <span> MENU</span>\n      </a-button>\n      <a-button :variant="\'warn\'">\n          <i class="material-icons">account_box</i>\n          <span> Log In</span>\n      </a-button>\n  ')]),n("p",[a._v("Leads to ")]),n("div",{staticClass:"example-content"},[n("a-button",{attrs:{variant:"primary"}},[n("i",{staticClass:"material-icons"},[a._v("close")]),n("span",[a._v(" CLOSE")])]),n("a-button",{attrs:{variant:"accent"}},[n("i",{staticClass:"material-icons"},[a._v("menu")]),n("span",[a._v(" MENU")])]),n("a-button",{attrs:{variant:"warn"}},[n("i",{staticClass:"material-icons"},[a._v("account_box")]),n("span",[a._v(" Log In")])])],1),n("h2",{attrs:{id:"raised-buttons"}},[a._v("Raised buttons")]),n("h3",[a._v("Example 1")]),n("p",[a._v("The following html")]),n("textarea",{directives:[{name:"verbatim",rawName:"v-verbatim"}]},[a._v("      <a-raised-button :variant=\"'primary'\">Primary</a-raised-button>\n      <a-raised-button :variant=\"'accent'\">Accent</a-raised-button>\n      <a-raised-button :variant=\"'warn'\">Warn</a-raised-button>\n      <a-raised-button :variant=\"'basic'\">Basic</a-raised-button>\n      <a-raised-button :variant=\"'disabled'\">Disabled</a-raised-button>    \n  ")]),n("p",[a._v("Leads to ")]),n("div",{staticClass:"example-content"},[n("a-raised-button",{attrs:{variant:"primary"}},[a._v("Primary")]),n("a-raised-button",{attrs:{variant:"accent"}},[a._v("Accent")]),n("a-raised-button",{attrs:{variant:"warn"}},[a._v("Warn")]),n("a-raised-button",{attrs:{variant:"basic"}},[a._v("Basic")]),n("a-raised-button",{attrs:{variant:"disabled"}},[a._v("Disabled")])],1),n("h3",[a._v("Example 2")]),n("p",[a._v("Raised buttons may also have icons. In such case, it is recommended to use\n      a Material Design icon and a span with the text. For example,\n  ")]),n("textarea",{directives:[{name:"verbatim",rawName:"v-verbatim"}],staticStyle:{height:"200px"}},[a._v('      <a-raised-button :variant="\'primary\'">\n          <i class="material-icons">close</i>\n          <span> CLOSE</span>\n      </a-raised-button>\n      <a-raised-button :variant="\'accent\'">\n          <i class="material-icons">menu</i>\n          <span> MENU</span>\n      </a-raised-button>\n      <a-raised-button :variant="\'warn\'">\n          <i class="material-icons">account_box</i>\n          <span> Log In</span>\n      </a-raised-button>\n  ')]),n("p",[a._v("Leads to ")]),n("div",{staticClass:"example-content"},[n("a-raised-button",{attrs:{variant:"primary"}},[n("i",{staticClass:"material-icons"},[a._v("close")]),n("span",[a._v(" CLOSE")])]),n("a-raised-button",{attrs:{variant:"accent"}},[n("i",{staticClass:"material-icons"},[a._v("menu")]),n("span",[a._v(" MENU")])]),n("a-raised-button",{attrs:{variant:"warn"}},[n("i",{staticClass:"material-icons"},[a._v("account_box")]),n("span",[a._v(" Log In")])])],1)])};i._withStripped=!0;var e={render:i,staticRenderFns:[function(){var a=this.$createElement,t=this._self._c||a;return t("ul",[t("li",[this._v("Primary: Primary color is used")]),t("li",[this._v("Accent: Secondary color is used.")]),t("li",[this._v("Warn: Warn color is used.")]),t("li",[this._v("Basic: Black is used.")]),t("li",[this._v("Disabled: Gray is used.")])])}]};t.a=e},"9/WN":function(a,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n("3XUN"),e=n("VU/8")(null,i.a,!1,null,null,null);e.options.__file="pages/buttons.vue",t.default=e.exports}});